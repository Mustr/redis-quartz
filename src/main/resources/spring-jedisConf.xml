<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
   
    <!--redisPool配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <!--最大连接数 -->
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <!--最大空闲连接数 -->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!--获取连接时最大等待毫秒数,如果该值小于0,则阻塞不确定的时长,默认值-1 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <!--在获取连接时检查连接有效性,默认为false -->
        <property name="testOnBorrow" value="false"/>
        <!--在连接空闲时检查连接有效性,默认为false -->
        <property name="testWhileIdle" value="true"/>
    </bean> 
    
    
    <!-- 单机版的jedisPool -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg index="1" name="host" value="${redis.host}" />
        <constructor-arg index="2" name="port" value="${redis.port}" type="int" />
    </bean>
    
    <!-- sharded版redis连接池  -->
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
      <constructor-arg index="0" name="poolConfig" ref="jedisPoolConfig"/>
      <constructor-arg index="1" name="shards">
      	<list>
      	 <bean class="redis.clients.jedis.JedisShardInfo">
      	 	<constructor-arg index="0" value="${redis.host1}"/>
      	 	<constructor-arg index="1" value="${redis.port1}" type="int"/>
      	 </bean>
      	 <bean class="redis.clients.jedis.JedisShardInfo">
      	 	<constructor-arg index="0" value="${redis.host2}"/>
      	 	<constructor-arg index="1" value="${redis.port2}" type="int"/>
      	 </bean>
      	</list>
      </constructor-arg>
    </bean>
    
    <!-- 集群版的jedis：使用这个，必须先搭建好redis的集群环境 -->
    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
     <constructor-arg index="0" name="nodes">
     	<set>
     		<bean class="redis.clients.jedis.HostAndPort">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7001}" type="int"/>
            </bean>
            <bean class="redis.clients.jedis.HostAndPort">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7002}" type="int"/>
            </bean>
            <bean class="redis.clients.jedis.HostAndPort">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7003}" type="int"/>
            </bean>
            <bean class="redis.clients.jedis.HostAndPort">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7004}" type="int"/>
            </bean>
            <bean class="redis.clients.jedis.HostAndPort">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7005}" type="int"/>
            </bean>
            <bean class="redis.clients.jedis.HostAndPort">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7006}" type="int"/>
            </bean>
     	</set>
     </constructor-arg>
     <constructor-arg index="1" name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    
    
    <!-- jedisTemplate 结合jedis-cluster使用 -->
    <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
      <property name="clusterNodes">
      	<set>
     		<bean class="org.springframework.data.redis.connection.RedisNode">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7001}" type="int"/>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7002}" type="int"/>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7003}" type="int"/>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7004}" type="int"/>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7005}" type="int"/>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <constructor-arg index="0" value="${redis.host}"/>
     	 	    <constructor-arg index="1" value="${redis.port7006}" type="int"/>
            </bean>
     	</set>
      </property>
    </bean>
    
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
      <constructor-arg index="0" name="clusterConfig" ref="redisClusterConfiguration"/>
      <constructor-arg index="1" name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
      <property name="connectionFactory" ref="jedisConnectionFactory"/>
      <property name="keySerializer" >  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="valueSerializer" >  
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />  
        </property>  
        <property name="hashKeySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>  
        <property name="hashValueSerializer">  
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>  
        </property>  
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="true"></property>
    </bean>
</beans>
<!-- 
一.Jedis连接方式
使用Jedis连接Redis服务器有三种方式:Jedis/JedisPool,ShardedJedis/ShardedJedisPool,JedisCluster,分别对应了服务器的不同部署方式.

1.使用Jedis/JedisPool连接
这种方式针对单个Redis服务器建立连接,Jedis是单个连接,JedisPool即Jedis连接池,为了优化连接性能而生.

2.使用ShardedJedis/ShardedJedisPool连接
这种方式可以连接互不相通的一组Redis服务器.即Redis服务器因为数据量太大在数据上进行了水平拆分,但是服务器间并不通信,也没有副本备份.同样的道理,ShardedJedisPool是针对ShardedJedis单个连接所做的优化.

3.使用JedisCluster连接
使用这种方式时,默认Redis已经进行了集群处理,JedisCluster即针对整个集群的连接.
 -->